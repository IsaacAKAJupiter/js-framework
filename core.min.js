'use strict';window.myapp={loading:false,current:null,currentRoute:null,routes:[],params:[]};window.addEventListener('popstate',()=>{if(window.location.pathname!==window.myapp.current){loadPage(window.location.pathname)}});window.addEventListener('load',async()=>{const path=window.location.pathname;await loadPage(path)});window.addEventListener('myapp-load-change',e=>{if(!e.detail.newValue&&!e.detail.deactivate){if('onActivate'in window&&window.onActivate){window.onActivate()}}});async function loadPage(page){if(window.myapp.currentRoute&&'onDeactivate'in window&&window.onDeactivate&&!(await Promise.resolve(window.onDeactivate()))){setLoading(false,true);return false}setLoading(true);const route=getRoute(page);window.myapp.current=page;window.myapp.currentRoute=route;_removeFromWindow('onActivate');_removeFromWindow('onDeactivate');document.title=route.title;window.history.pushState('',route.title,page);let tagsToRemove=[];tagsToRemove.push(...(await reloadTags('link',route.css)));const partial=await fetch(`partials/${route.partial }`);const html=await partial.text();document.getElementById('myapp-main').innerHTML=html;_overrideAllHref();tagsToRemove.push(...(await reloadTags('script',route.js)));for(let i=0;i<tagsToRemove.length;i+=1){tagsToRemove[i].baseElement.removeChild(tagsToRemove[i].element)}let preloadPromises=[];if(route.preload&&route.preload.length){for(let i=0;i<route.preload.length;i+=1){if(route.preload[i].name in window){if(!route.preload[i].params||!route.preload[i].params.length){preloadPromises.push(window[route.preload[i].name]())}else{preloadPromises.push(window[route.preload[i].name](...route.preload[i].params))}}}}await Promise.all(preloadPromises);setLoading(false);return true}async function reloadTags(type,urls){const tags=document.querySelectorAll(`[myapp-injected-${ type }]`);const src=type==='script'?'src':'href';const element=type==='script'?document.body:document.head;let duplicates=[];let toRemove=[];for(let i=0;i<tags.length;i+=1){if(urls.includes(tags[i][src])){duplicates.push(tags[i][src])}else{toRemove.push(tags[i])}}const load=url=>{return new Promise((resolve,reject)=>{if(duplicates.includes(url)){resolve();return}if(type==='script'){const script=document.createElement('script');script.setAttribute('myapp-injected-script','');script.src=url;script.onload=resolve;element.appendChild(script)}else{const link=document.createElement('link');link.setAttribute('myapp-injected-link','');link.rel='stylesheet';link.href=url;link.onload=resolve;element.appendChild(link)}})};let promises=[];for(let i=0;i<urls.length;i+=1){promises.push(load(urls[i]))}await Promise.all(promises);return toRemove.map(remove=>{return{element:remove,baseElement:element}})}function _overrideAllHref(){const hrefElements=document.querySelectorAll('[my-href]');for(let i=0;i<hrefElements.length;i+=1){const href=hrefElements[i].getAttribute('my-href');hrefElements[i].setAttribute('href',href);hrefElements[i].onclick=e=>{e.preventDefault();loadPage(href)}}}function _removeFromWindow(name){if(name in window){try{delete window[name]}catch(_){window[name]=undefined}}}