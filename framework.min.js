'use strict';const MYAPP_LOAD_STATES={FETCHING_ROUTE:'FETCHING_ROUTE',RELOADING_LINKS:'RELOADING_LINKS',RELOADING_SCRIPTS:'RELOADING_SCRIPTS',LOADING_HTML:'LOADING_HTML',OVERRIDING_HREF:'OVERRIDING_HREF',PRELOADING_ROUTE:'PRELOADING_ROUTE'};window.myapp={loading:false,current:null,currentRoute:null,routes:[],params:[],loadStates:[],baseUrl:window.location.origin?window.location.origin+'/':window.location.protocol+'/'+window.location.host+'/'};window.addEventListener('popstate',()=>{if(window.location.pathname!==window.myapp.current){loadPage(window.location.pathname)}});window.addEventListener('load',async()=>{const path=window.location.pathname;await loadPage(path)});window.addEventListener('myapp-load-change',(e)=>{if(!e.detail.newValue&&!e.detail.deactivate){if('onActivate'in window&&window.onActivate){window.onActivate()}}});async function loadPage(page){if(window.myapp.loading){return false}if(window.myapp.currentRoute&&'onDeactivate'in window&&window.onDeactivate&&!(await Promise.resolve(window.onDeactivate()))){setLoading(false,true);return false}setLoading(true);_fireLoadEvent(MYAPP_LOAD_STATES.FETCHING_ROUTE);const route=getRoute(page);window.myapp.current=page;window.myapp.currentRoute=route;_removeFromWindow('onActivate');_removeFromWindow('onDeactivate');document.title=route.title;window.history.pushState('',route.title,page);_fireLoadEvent(MYAPP_LOAD_STATES.RELOADING_LINKS);window.myapp.removeTags=await _reloadTags('link',route.css);_fireLoadEvent(MYAPP_LOAD_STATES.OVERRIDING_HREF);_overrideAllHref();_fireLoadEvent(MYAPP_LOAD_STATES.RELOADING_SCRIPTS);window.myapp.removeTags.push(...(await _reloadTags('script',route.js)));_fireLoadEvent(MYAPP_LOAD_STATES.PRELOADING_ROUTE);let preloadPromises=[];if(route.preload&&route.preload.length){for(let i=0;i<route.preload.length;i+=1){if(route.preload[i].name in window){if(!route.preload[i].params||!route.preload[i].params.length){preloadPromises.push(window[route.preload[i].name]())}else{preloadPromises.push(window[route.preload[i].name](...route.preload[i].params))}}}}await Promise.all(preloadPromises);_fireLoadEvent(MYAPP_LOAD_STATES.LOADING_HTML);const partial=await fetch(`partials/${route.partial }`);const html=await partial.text();document.getElementById('myapp-main').innerHTML=html;for(let i=0;i<window.myapp.removeTags.length;i+=1){try{window.myapp.removeTags[i].baseElement.removeChild(window.myapp.removeTags[i].element)}catch(_){}}window.scrollTo(0,0);setLoading(false);return true}async function _reloadTags(type,urls){const tags=[...document.querySelectorAll(`[myapp-injected-${ type }]`)];const src=type==='script'?'src':'href';const element=type==='script'?document.body:document.head;const load=(url)=>{return new Promise((resolve,reject)=>{if(type==='script'){const script=document.createElement('script');script.setAttribute('myapp-injected-script','');script.src=url;script.onload=resolve;element.appendChild(script)}else{const link=document.createElement('link');link.setAttribute('myapp-injected-link','');link.rel='stylesheet';link.href=url;link.onload=resolve;element.appendChild(link)}})};let promises=[];for(let i=0;i<urls.length;i+=1){promises.push(load(urls[i]))}await Promise.all(promises);return tags.map((remove)=>{return{element:remove,baseElement:element}})}function _overrideAllHref(){const hrefElements=document.querySelectorAll('[my-href]');for(let i=0;i<hrefElements.length;i+=1){const href=hrefElements[i].getAttribute('my-href');hrefElements[i].setAttribute('href',href);hrefElements[i].onclick=(e)=>{e.preventDefault();loadPage(href)}}}function _removeFromWindow(name){if(name in window){try{delete window[name]}catch(_){window[name]=undefined}}}function addRoutes(routes){for(let i=0;i<routes.length;i+=1){addRoute(...Object.values(routes[i]))}}function addRoute(route,partial,title,js=[],css=[],preload=[]){let regex;let variables;if(!route.startsWith('/')){route=`/${ route }`}regex=_generateRouteRegex(route);variables=_generateVariables(route);window.myapp.routes.push({route,regex,partial,title,js,css,preload,variables})}function _generateRouteRegex(route){let leadingSlash=route[route.length-1]==='/'?'':'/?';return new RegExp(`^${route.replace(/\*/g,'.+').replace(/\/([0-9a-zA-Z]+)/g,'/($1)').replace(/:.+?(\?)?(\/|$)/g,'([^/]+$2)$1')}${ leadingSlash }$`)}function getRoute(url){for(let i=0;i<window.myapp.routes.length;i+=1){const route=window.myapp.routes[i];let matches=route.regex.exec(url);if(!matches){continue}if(route.variables&&route.variables.length){let params=_fetchParams(route,matches);if(params){window.myapp.params=params}}return route}return null}function _generateVariables(route){let variables=[];let routeParams=route.split('/');routeParams.shift();for(let i=0;i<routeParams.length;i+=1){if(routeParams[i][0]===':'){let name=routeParams[i].replace(/:(.+?)(\?|$)/,'$1');variables.push({index:i+1,name,optional:routeParams[i][routeParams[i].length-1]==='?'})}}return variables}function _fetchParams(route,matches){if(!route.variables){throw Error('No variables, function should not have been called.')}let params=[];for(let i=0;i<route.variables.length;i+=1){if(matches[route.variables[i].index]){try{params[route.variables[i].name]=decodeURIComponent(matches[route.variables[i].index].replace(/\//g,''))}catch(e){throw Error('Unexpected error while decoding the URI component.')}}}return params}function setLoading(value,deactivate=false){const oldValue=window.myapp.loading;window.myapp.loading=value;const event=new CustomEvent('myapp-load-change',{detail:{newValue:value,oldValue,deactivate}});window.dispatchEvent(event)}function _fireLoadEvent(type){const event=new CustomEvent('myapp-load-event',{detail:type});window.dispatchEvent(event)}